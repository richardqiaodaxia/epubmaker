<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <title>总体设计</title>
</head>
<body>
<h2>总体设计</h2><br/>
总体设计的基本目的就是回答“概括地说，系统应该如何实现？”这个问题，因此总体设计又称为概要设计或初步设计。
通过这个阶段的工作将划分出组成系统的物理元素——程序、文件、数据库、人工过程和文档等，带式每一个物理元素仍然
处理黑盒子级。总体设计的另一项重要任务是设计软件的结构，也就是要确定系统中每一个程序是由哪些模块组成的，
以及这些模块相互间的关系。
<h3>5.1 设计过程</h3><br/>
总体设计过程通常由两个主要阶段组成：系统设计阶段，确定系统的具体实现方案；结构设计阶段，确定软件结构。
典型的总体设计过程包括下述9个步骤：<br/>
<h4>1. 设想供选择的方案</h4><br/>
<h4>2. 选取合理的方案</h4><br/>
<h4>3. 推荐最佳方案</h4><br/>
<h4>4. 功能分解</h4><br/>
<h4>5. 设计软件结构</h4><br/>
<h4>6. 设计数据库</h4><br/>
<h4>7. 指定测试计划</h4><br/>
<h4>8. 书写文档</h4><br/>
<ol>
    <li>系统说明</li>
    <li>用户手册</li>
    <li>测试计划</li>
    <li>详细的实现计划</li>
    <li>数据库设计结果</li>
</ol>
<h4>9. 审查和复审</h4><br/>

<h3>5.2 设计原理</h3><br/>
<h4>5.2.1 模块化</h4><br/>
模块是由边界元素限定的相邻程序元素（例如，数据说明，可执行的语句）的序列，而且有一个总体标识符代表它。
模块化就是把程序划分成独立命名且可独立访问的模块，每一个模块完成一个子功能，把这些模块集成起来构建一个整体，
可以完成指定的功能满足用户的需求。<br/>
采用模块化原理可以使软件结构清晰，不仅容易设计也容易阅读和理解。因为程序错误通常局限在有关的模块及它们之间的
接口中，所以模块化使软件容易测试和调试，因而有助于提高软件的可靠性。
<h4>5.2.2 抽象</h4><br/>
在现实世界中一定事物、状态或过程之间总存在这着相似的方面。把这些相似的方面几种和概括起来，暂时忽略它们之间的差异，
这就是抽象。<br/>
<h4>5.2.3 逐步求精</h4><br/>
可以把“逐步求精”定义为：为了能集中精力解决主要问题而尽量推迟对问题细节的考虑。<br/>
<h4>5.2.4 信息隐藏和局部化</h4><br/>
应用模块化原理时，自然会产生的一个问题是：“为了得到最好的一组模块，应该怎样分解软件呢？”。信息隐藏原理支持：<br/>
<b>
    应该这样设计和确定模块，使得一个模块内包含的信息（过程和数据）对于不需要这些信息的模块来说，是不能访问的。
</b>
<br/>
局部化的概念和信息应藏概念是密切相关的。所谓局部化是指把一些关系密切的软件元素物理地彼此靠近。在模块中使用局部数据元素
是局部化的一个例子。<br/>
<h4>5.2.5 模块独立</h4><br/>
模块独立的概念是模块化、抽象、信息隐藏和局部化概念的直接结果<br/>
开发具有独立功能而且和其他模块之间没有过多的相互作用的模块，就可以做到模块独立。<br/>
希望这样设计软件结构，使得每个模块完成一个相对独立的特定子功能，并且和其他模块之间的关系很简单。<br/>
<b>模块的独立程度可以由两个定性标准度量，这两个标准分别称为内聚和耦合</b><br/>
耦合衡量不同模块彼此间相互依赖的紧密程度；内聚衡量一个模块内部各个元素彼此结合的紧密程度。
<h5>1. 耦合</h5><br/>
耦合是对一个软件结构内不同模块之间互连程度的度量。
耦合强弱取决于模块间接口的复杂程度，进入或访问一个模块的点，以及通过接口的数据。<br/>
如果两个模块彼此间通过参数交换信息，而且交换的信息仅仅是数据，
那么这种耦合称为<div style="color:red;">数据耦合</div>。数据耦合是低耦合<br/>
如果传递的信息中由控制信息，则这种耦合称为<div style="color:red;">控制耦合</div><br/>
当把整个数据结构作为参数传递而被调用的模块只需要使用其中一部分数据元素时，就出现了<div style="color:red;">特征耦合</div><br/>
<h5>2. 内聚</h5><br/>
</body>
</html>